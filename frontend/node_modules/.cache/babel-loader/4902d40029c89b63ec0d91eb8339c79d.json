{"ast":null,"code":"var _jsxFileName = \"/Users/jasonschreiber/Documents/UPenn Documents/Junior Year/Spring/CIS 2330/Practical-HW4/frontend/src/components/NavBar.js\";\nimport React from \"react\";\nimport { Navbar, Container, DropdownButton, Dropdown, Button } from \"react-bootstrap\";\n/*\n * Props:\n *  - connected (boolean): true if the user is connected to AlgoSigner\n *  - handlerUserUpdate (function): handles behavior when the user dropdown selection changes\n *  - accounts (list of strings): user addresses that are connected to AlgoSigner\n *  - mainAccount (string): user that is the current selection in the dropdown\n *  - refreshState (function): handles behavior when refresh button is clicked\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar(props) {\n  /*\n   * Render the navigation bar at the top of the page. It displays the logo (\"AlgoVoter\"),\n   * a dropdown button to choose the account to work with, and a refresh button.\n   */\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    style: {\n      backgroundColor: \"#201f48\"\n    },\n    className: \"justify-content-end\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        style: {\n          color: \"#0dcaf0\",\n          fontSize: \"30px\"\n        },\n        href: \"/\",\n        children: \"AlgoVoter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        className: \"justify-content-end\",\n        children: [props.connected && props.accounts.length > 0 && /*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: \"info\",\n          id: \"choose-user\",\n          title: props.mainAccount ? props.mainAccount : \"\",\n          className: \"px-3\",\n          children: props.accounts.map(user => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => props.handleUserUpdate(user),\n            children: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), props.connected && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: props.refreshState,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/jasonschreiber/Documents/UPenn Documents/Junior Year/Spring/CIS 2330/Practical-HW4/frontend/src/components/NavBar.js"],"names":["React","Navbar","Container","DropdownButton","Dropdown","Button","NavBar","props","backgroundColor","color","fontSize","connected","accounts","length","mainAccount","map","user","handleUserUpdate","refreshState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,MALF,QAMO,iBANP;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB;AACF;AACA;AACA;AACE,sBACE,QAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KADT;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAAA,2BAIE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAArB;AAA6D,QAAA,IAAI,EAAC,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,SAAS,EAAC,qBAA3B;AAAA,mBACGH,KAAK,CAACI,SAAN,IAAmBJ,KAAK,CAACK,QAAN,CAAeC,MAAf,GAAwB,CAA3C,iBACC,QAAC,cAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,EAAE,EAAC,aAFL;AAGE,UAAA,KAAK,EAAEN,KAAK,CAACO,WAAN,GAAoBP,KAAK,CAACO,WAA1B,GAAwC,EAHjD;AAIE,UAAA,SAAS,EAAC,MAJZ;AAAA,oBAMGP,KAAK,CAACK,QAAN,CAAeG,GAAf,CAAoBC,IAAD,iBAClB,QAAC,QAAD,CAAU,IAAV;AAEE,YAAA,OAAO,EAAE,MAAMT,KAAK,CAACU,gBAAN,CAAuBD,IAAvB,CAFjB;AAAA,sBAIGA;AAJH,aACOA,IADP;AAAA;AAAA;AAAA;AAAA,kBADD;AANH;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAkBGT,KAAK,CAACI,SAAN,iBACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAEJ,KAAK,CAACW,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;KA1CQZ,M;AA4CT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport {\n  Navbar,\n  Container,\n  DropdownButton,\n  Dropdown,\n  Button,\n} from \"react-bootstrap\";\n\n/*\n * Props:\n *  - connected (boolean): true if the user is connected to AlgoSigner\n *  - handlerUserUpdate (function): handles behavior when the user dropdown selection changes\n *  - accounts (list of strings): user addresses that are connected to AlgoSigner\n *  - mainAccount (string): user that is the current selection in the dropdown\n *  - refreshState (function): handles behavior when refresh button is clicked\n */\nfunction NavBar(props) {\n  /*\n   * Render the navigation bar at the top of the page. It displays the logo (\"AlgoVoter\"),\n   * a dropdown button to choose the account to work with, and a refresh button.\n   */\n  return (\n    <Navbar\n      style={{ backgroundColor: \"#201f48\" }}\n      className=\"justify-content-end\"\n    >\n      <Container>\n        <Navbar.Brand style={{ color: \"#0dcaf0\", fontSize: \"30px\" }} href=\"/\">\n          AlgoVoter\n        </Navbar.Brand>\n\n        <Navbar.Collapse className=\"justify-content-end\">\n          {props.connected && props.accounts.length > 0 && (\n            <DropdownButton\n              variant=\"info\"\n              id=\"choose-user\"\n              title={props.mainAccount ? props.mainAccount : \"\"}\n              className=\"px-3\"\n            >\n              {props.accounts.map((user) => (\n                <Dropdown.Item\n                  key={user}\n                  onClick={() => props.handleUserUpdate(user)}\n                >\n                  {user}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n          )}\n          {props.connected && (\n            <Button variant=\"info\" onClick={props.refreshState}>\n              Refresh\n            </Button>\n          )}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}